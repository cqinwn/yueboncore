<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yuebon.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:Yuebon.AspNetCore.Models.ErrCode">
            <summary>
            错误代码描述
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err0">
            <summary>
            请求成功
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.successCode">
            <summary>
            请求成功代码0
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err1">
            <summary>
            请求失败
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.failCode">
            <summary>
            请求失败代码1
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err40001">
            <summary>
            获取access_token时AppID或AppSecret错误。请开发者认真比对appid和AppSecret的正确性，或查看是否正在为恰当的应用调用接口
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err40002">
            <summary>
            调用接口的服务器URL地址不正确，请联系供应商进行设置
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err40003">
            <summary>
            请确保grant_type字段值为client_credential
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err40004">
            <summary>
            不合法的凭证类型
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err40005">
            <summary>
            用户令牌accesstoken超时失效
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err403">
            <summary>
            您未被授权使用该功能，请重新登录试试或联系管理员进行处理
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err40007">
            <summary>
            传递参数出现错误
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err43001">
            <summary>
            更新数据失败
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err43002">
            <summary>
            更新数据失败
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err43003">
            <summary>
            物理删除数据失败
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err50001">
            <summary>
            该用户不存在
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err50002">
            <summary>
            该用户已存在
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err50003">
            <summary>
            会员注册失败
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Models.ErrCode.err60001">
            <summary>
            查询数据不存在
            </summary>
        </member>
        <member name="T:Yuebon.AspNetCore.Common.MyApiException">
            <summary>
            自定义异常信息
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.Common.MyApiException.Msg">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.Common.MyApiException.Success">
            <summary>
            成功状态
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.Common.MyApiException.ErrCode">
            <summary>
            提示代码
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Common.MyApiException.#ctor(System.String)">
            <summary>
            异常
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Common.MyApiException.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="errcode"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Common.MyApiException.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="success"></param>
            <param name="errcode"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.CheckController">
            <summary>
             sso验证
            <para>其他站点通过后台Post来认证</para>
            <para>或使用静态类Yuebon.Security.Application.SSO.AuthHelper访问</para>
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.CheckController.GetStatus(System.String,System.String)">
            <summary>
            检验token是否有效
            </summary>
            <param name="token">The token.</param>
            <param name="requestid">请求Id备用参数.</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.CheckController.GetUser(System.String,System.String)">
            <summary>
            根据token获取用户及用户可访问的所有资源
            </summary>
            <param name="token"></param>
            <param name="requestid">备用参数.</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.CheckController.GetUserName(System.String,System.String)">
            <summary>
            根据token获取用户名称
            </summary>
            <param name="token"></param>
            <param name="requestid">备用参数.</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.CheckController.Login(Yuebon.AspNetCore.SSO.PassportLoginRequest)">
            <summary>
            登录接口
            </summary>
            <param name="request">登录参数</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.CheckController.Logout(System.String,System.String)">
            <summary>
            注销登录
            </summary>
            <param name="token"></param>
            <param name="requestid">备用参数.</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.CheckController.GetToken">
            <summary>
            获取token
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.FilesController">
            <summary>
            文件上传
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.FilesController.#ctor(Yuebon.Security.Application.UploadFileApp,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.FilesController.Upload(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
             单文件上传接口
            </summary>
            <param name="files"></param>
            <returns>服务器存储的文件信息</returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.FilesController.Uploads(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
             批量上传文件接口
            </summary>
            <param name="files"></param>
            <returns>服务器存储的文件信息</returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.FilesController.Adds(Microsoft.AspNetCore.Http.IFormFileCollection,System.String,System.String)">
            <summary>
            批量上传文件
            </summary>
            <param name="files">文件</param>
            <param name="belongApp">所属应用，如文章article</param>
            <param name="belongAppId">所属应用ID，如文章id</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.FilesController.Add(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String)">
            <summary>
            单个上传文件
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.FilesController.UploadFile(System.String,System.Byte[])">
            <summary>
            实现文件上传到服务器保存，并生成缩略图
            </summary>
            <param name="fileName">文件名称</param>
            <param name="fileBuffers">文件字节流</param>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.IdentityController">
            <summary>
            Identity控制器
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.IdentityController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.LoginController">
            <summary>
            用户登录接口控制器
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.LoginController.#ctor(Yuebon.Security.IServices.IUserService)">
            <summary>
            构造函数注入服务
            </summary>
            <param name="_iService"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.LoginController.GetCheckUser(System.String,System.String,System.String)">
            <summary>
            登录验证用户
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="url">返回Url</param>
            <returns>返回用户User对象</returns>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.TokenController">
            <summary>
            Token令牌接口控制器
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.TokenController.#ctor(Yuebon.Security.IServices.IAPPService,Yuebon.Commons.Options.JwtOption)">
            <summary>
            
            </summary>
            <param name="_iAPPService"></param>
            <param name="jwtModel"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.TokenController.Get(System.String,System.String,System.String)">
            <summary>
            根据应用信息获得token令牌
            </summary>
            <param name="grant_type">获取access_token填写client_credential</param>
            <param name="appid">用户唯一凭证，应用AppId</param>
            <param name="secret">应用密钥AppSecret</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.TokenController.CheckToken(System.String)">
            <summary>
            验证token的合法性。
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.TokenController.RefreshToken(System.String)">
            <summary>
            刷新token。
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.TokenController.ToJsonContent(System.Object)">
            <summary>
            把object对象转换为ContentResult
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.ApiController">
            <summary>
            WebApi控制器基类
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.Controllers.ApiController.CurrentUser">
            <summary>
            当前登录的用户属性
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.ApiController.ToJsonContent(System.Object)">
            <summary>
            把object对象转换为ContentResult
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.ApiController.CheckToken(System.String)">
            <summary>
            验证token的合法性。如果不合法，返回MyApiException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.ApiController.GetToken">
            <summary>
            获取token
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yuebon.AspNetCore.Controllers.AreaApiController`2">
            <summary>
            基本控制器，增删改查
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TServicen">Service类型</typeparam>
        </member>
        <member name="F:Yuebon.AspNetCore.Controllers.AreaApiController`2.iService">
            <summary>
            服务接口
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.#ctor(`1)">
            <summary>
            构造方法
            </summary>
            <param name="iService"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.OnBeforeInsert(`0)">
            <summary>
            在插入数据前对数据的修改操作
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.OnBeforeUpdate(`0)">
            <summary>
            在更新数据前对数据的修改操作
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.OnBeforeSoftDelete(`0)">
            <summary>
            在软删除数据前对数据的修改操作
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.InsertAsync(`0)">
            <summary>
            异步新增数据
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.UpdateAsync(`0,System.String)">
            <summary>
            异步更新数据
            </summary>
            <param name="info"></param>
            <param name="id">主键Id</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.Delete(System.String)">
            <summary>
            物理删除
            </summary>
            <param name="id">主键Id</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.DeleteAsync(System.String)">
            <summary>
            异步物理删除
            </summary>
            <param name="id">主键Id</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.DeleteSoft(System.String,System.String)">
            <summary>
            软删除信息
            </summary>
            <param name="id">主键Id</param>
            <param name="bltag">删除标识，默认为1：即设为删除,0：未删除</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.DeleteSoftAsync(System.String,System.String)">
            <summary>
            异步软删除信息
            </summary>
            <param name="id">主键Id</param>
            <param name="bltag">删除标识，默认为1：即设为删除,0：未删除</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.SetEnabledMark(System.String,System.String)">
            <summary>
            设为数据有效性
            </summary>
            <param name="id">主键Id</param>
            <param name="bltag">有效标识，默认为1：即设为无效,0：有效</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.SetEnabledMarkAsync(System.String,System.String)">
            <summary>
            异步设为数据有效性
            </summary>
            <param name="id">主键Id</param>
            <param name="bltag">有效标识，默认为1：即设为无效,0：有效</param>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.GetById(System.String)">
            <summary>
            根据主键Id获取一个对象信息
            </summary>
            <param name="id">主键Id</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.FindWithPager(`0)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="info">info</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.GetPagerInfo">
            <summary>
            根据Request参数获取分页对象数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Controllers.AreaApiController`2.GetPagerCondition(System.Boolean)">
            <summary>
            获取分页操作的查询条件
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.Filter.ExceptionHandlingAttribute">
            <summary>
            表示一个特性，该特性用于全局捕获程序运行异常信息。
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.Filter.ExceptionHandlingAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.Filter.RemoveVersionFromParameter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.Filter.RemoveVersionFromParameter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.Filter.SwaggerFileUploadFilter">
            <summary>
            Swagger 上传文件过滤器
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.Filter.SwaggerFileUploadFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            应用过滤器
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.HiddenApiAttribute">
            <summary> 
            隐藏接口，不生成到swagger文档展示 
            </summary> 
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.HiddenApiFilter">
            <summary>
            隐藏接口，不生成到swagger文档展示 
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.HiddenApiFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            实现Apply方法
            </summary>
            <param name="swaggerDoc"></param>
            <param name="documentFilterContext"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.YuebonAuthorizationFilter">
            <summary>
            功能权限授权验证
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.YuebonAuthorizationFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.YuebonAuthorizeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.Mvc.YuebonAuthorizeAttribute.Permission">
            <summary>
            权限
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.YuebonAuthorizeAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="permission"></param>
        </member>
        <member name="T:Yuebon.AspNetCore.Mvc.TokenProvider">
            <summary>
            Token令牌提供类
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.TokenProvider.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.TokenProvider.#ctor(Yuebon.Commons.Options.JwtOption)">
            <summary>
            构造函数，初花jwtmodel
            </summary>
            <param name="jwtModel"></param>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.TokenProvider.GenerateToken(System.String,System.String,System.String)">
            <summary>
            直接通过appid和加密字符串获取访问令牌接口
            </summary>
            <param name="grant_type">获取access_token填写client_credential</param>
            <param name="appid">用户唯一凭证</param>
            <param name="secret">用户唯一凭证密钥，即appsecret</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.TokenProvider.ValidateToken(System.String)">
            <summary>
            检查用户的Token有效性
            </summary>
            <param name="token">token令牌</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.Mvc.TokenProvider.LoginToken(Yuebon.Security.Models.User,System.String)">
            <summary>
            根据用户获取token
            </summary>
            <param name="userLogOn"></param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.GetToken">
            <summary>
            根据URL中的Token参数或Cookie获取token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.CheckLogin(System.String,System.String)">
            <summary>
            检查用户登录状态
            </summary>
            <param name="token">token</param>
            <param name="remark">备注信息</param>
            <returns></returns>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.CheckLogin(System.String)">
            <summary>
            检查用户登录状态
            <para>通过URL中的Token参数或Cookie中的Token</para>
            </summary>
            <param name="remark">备注信息</param>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.GetCurrentUser(System.String)">
            <summary>
            获取当前登录的用户信息
            <para>通过URL中的Token参数或Cookie中的Token</para>
            </summary>
            <param name="remark">The remark.</param>
            <returns>LoginUserVM.</returns>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.GetUserName(System.String)">
            <summary>
            获取当前登录的用户名
            <para>通过URL中的Token参数或Cookie中的Token</para>
            </summary>
            <param name="remark">The remark.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.Login(System.String,System.String,System.String,System.String)">
            <summary>
            登录接口
            </summary>
            <param name="appKey">应用程序key.</param>
            <param name="appSecret">应用程序Secret.</param>
            <param name="username">用户名</param>
            <param name="pwd">密码</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.AuthHelper.Logout">
            <summary>
            注销
            </summary>
        </member>
        <member name="T:Yuebon.AspNetCore.SSO.LoginResult">
            <summary>
            登录返回结果
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.SSO.LoginResult.ReturnUrl">
            <summary>
            跳转Url
            </summary>
        </member>
        <member name="F:Yuebon.AspNetCore.SSO.LoginResult.AccessToken">
            <summary>
            token
            </summary>
        </member>
        <member name="T:Yuebon.AspNetCore.SSO.PassportLoginRequest">
            <summary>
            系统登录请求实体
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.PassportLoginRequest.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.PassportLoginRequest.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.PassportLoginRequest.SystemCode">
            <summary>
            系统编码
            </summary>
        </member>
        <member name="M:Yuebon.AspNetCore.SSO.SSOAuthHelper.Validate(Yuebon.AspNetCore.SSO.PassportLoginRequest)">
            <summary>
            用户登录验证，主要用管理后台、H5和App应用用户登录
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.TokenModel.Access_Token">
            <summary>
            获取到的凭证值
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.TokenModel.Expires_In">
            <summary>
            获取到的凭证值
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.Account">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.Name">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.HeadIcon">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.MemberGradeId">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.ReferralUserId">
            <summary>
            上级推广员
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.CreateTime">
            <summary>
            注册时间
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.Role">
            <summary>
            角色编码，多个角色，使用“,”分格
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.SSO.YuebonCurrentUser.OtherOpenObj">
            <summary>
            其他对象
            </summary>
        </member>
        <member name="T:Yuebon.AspNetCore.UI.SearchModel">
            <summary>
            查询条件公共实体类
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.UI.SearchModel.Keywords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.UI.SearchModel.Order">
            <summary>
            排序方式 默认asc 
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.UI.SearchModel.Sort">
            <summary>
            排序字段 默认Id
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.UI.SearchModel.PageNo">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:Yuebon.AspNetCore.UI.SearchModel.PageSize">
            <summary>
            每页显示数量
            </summary>
        </member>
        <member name="T:Yuebon.WebApi.Common.SessionObject">
            <summary>
            SessionObject是登录之后，给客户端传回的对象
            </summary>
        </member>
        <member name="P:Yuebon.WebApi.Common.SessionObject.SessionKey">
            <summary>
            SessionKey
            </summary>
        </member>
        <member name="P:Yuebon.WebApi.Common.SessionObject.LogonUser">
            <summary>
            当前登录的用户的信息
            </summary>
        </member>
    </members>
</doc>
